# -*- coding: utf-8 -*-
"""E-commerce_Data_Analysis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/13YgUf6aNNDRVeywpY_S6HQ5sxgCNXuLq
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

data = pd.read_csv('/content/E-commerce Dataset.csv')
print(data.head())

# Checking for missing values
print(data.isnull().sum())

# Filling or dropping missing values
data.fillna(method='ffill', inplace=True)

# Removing duplicates
data.drop_duplicates(inplace=True)

# Converting data types if necessary
#data['Order_date'] = pd.to_datetime(data['Order_date'])

# Summary statistics
print(data.describe())

# Basic info
print(data.info())

# Convert Order_Date to datetime
data['Order_Date'] = pd.to_datetime(data['Order_Date'])

# Check the data types and basic info
print(data.info())

# Display summary statistics
print(data.describe())

# Summary statistics
print(data.describe(include='all'))

# Basic info
print(data.info())

# Distribution of Sales
plt.figure(figsize=(10, 6))
sns.histplot(data['Sales'], kde=True)
plt.title('Distribution of Sales')
plt.xlabel('Sales')
plt.ylabel('Frequency')
plt.show()

# Distribution of Profit
plt.figure(figsize=(10, 6))
sns.histplot(data['Profit'], kde=True)
plt.title('Distribution of Profit')
plt.xlabel('Profit')
plt.ylabel('Frequency')
plt.show()

monthly_sales = data.set_index('Order_Date').resample('M')['Sales'].sum()

# Plotting the monthly sales trend
plt.figure(figsize=(12, 6))
monthly_sales.plot(kind='line')
plt.title('Monthly Sales Trend')
plt.xlabel('Month')
plt.ylabel('Sales')
plt.show()

# Distribution of Gender
plt.figure(figsize=(10, 6))
sns.countplot(data['Gender'])
plt.title('Customer Gender Distribution')
plt.xlabel('Gender')
plt.ylabel('Count')
plt.show()

# Group by month and sum sales
monthly_sales = data.set_index('Order_Date').resample('M')['Sales'].sum()

# Plotting the monthly sales trend
plt.figure(figsize=(12, 6))
monthly_sales.plot(kind='line')
plt.title('Monthly Sales Trend')
plt.xlabel('Month')
plt.ylabel('Sales')
plt.show()

top_products = data.groupby('Product').sum(numeric_only=True)['Sales'].sort_values(ascending=False).head(10)

# Plotting top-selling products
plt.figure(figsize=(12, 6))
sns.barplot(x=top_products.values, y=top_products.index)
plt.title('Top-Selling Products')
plt.xlabel('Sales')
plt.ylabel('Product')
plt.show()

plt.figure(figsize=(10, 6))
sns.countplot(data['Gender'])
plt.title('Customer Gender Distribution')
plt.xlabel('Gender')
plt.ylabel('Count')
plt.show()

payment_sales = data.groupby('Payment_method').sum(numeric_only=True)['Sales']

# Plotting sales by payment method
plt.figure(figsize=(12, 6))
sns.barplot(x=payment_sales.index, y=payment_sales.values)
plt.title('Sales by Payment Method')
plt.xlabel('Payment Method')
plt.ylabel('Sales')
plt.show()

device_sales = data.groupby('Device_Type').sum(numeric_only=True)['Sales']

# Plotting sales by device type
plt.figure(figsize=(12, 6))
sns.barplot(x=device_sales.index, y=device_sales.values)
plt.title('Sales by Device Type')
plt.xlabel('Device Type')
plt.ylabel('Sales')
plt.show()

